library(consensus)
use_r("scorix.R")
View(por)
por
ddocument()
document()
library(consensus)
scorix(por)
library(consensus)
scorix(por)
?outer
x <- 1:9; names(x) <- x
# Multiplication & Power Tables
x %o% x
y <- 2:8; names(y) <- paste(y,":", sep = "")
outer(y, x, "^")
x
y
outer(month.abb, 1999:2003, FUN = "paste")
x
y
outer(y, x, "^")
scorix(por)
use_c("scorix")
use_r("consensus-package.R")
as.numeric(profile_of_rankings())
as.numeric(por)
as.numeric(por[,-1])
as.matrix(por)
as.matrix(por[-1, 1])
as.matrix(por[1, -1])
as.matrix(por[1, -1], por[1, -1])
as.matrix(por[1, -1], por[1, -1], ">")
as.matrix(as.numeric(por[1, -1]), as.numeric(por[1, -1]), ">")
as.matrix(as.numeric(por[1, -1]), as.numeric(por[1, -1]), "<")
outer(as.numeric(as.matrix(por)[1, -1]), as.numeric(as.matrix(por)[1, -1]), "<")
outer(as.numeric(as.matrix(por)[1, -1]), as.numeric(as.matrix(por)[1, -1]), "<") %>% rowSums()
outer(as.numeric(as.matrix(por)[1, -1]), as.numeric(as.matrix(por)[1, -1]), "<") %>% rowSums() %>% t()
outer(as.numeric(as.matrix(por)[1, -1]), as.numeric(as.matrix(por)[1, -1]), "<") %>% rowSums()
library(consensus)
por
as.matrix(por)
document()
document()
library(consensus)
document()
library(consensus)
library(consensus)
library(consensus)
library(consensus)
document()
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
use_c("scorix")
use_r("consensus-package.R")
library(consensus)
scorix(por)
document()
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
por
&#8827;
"&#8827;"
utf8::utf8_print("&#8827;")
utf8::utf8_print("\u227B")
tools::texi2pdf("paper/art.tex")
library(tinytex)
install_tinytex("ucs")
install_tinytex()
tinytex::tlmgr_install("ucs")
tinytex::tlmgr_install("ae")
tinytex::tlmgr_install("mathrsf")
tinytex::tlmgr_install("mathrsfs")
tinytex::tlmgr_install("mathrsfs")
tinytex::tlmgr_install("mathrsfs")
tinytex::tlmgr_install("unixode")
tinytex::xelatex("paper/art.tex")
tinytex::tlmgr_install("rsfs")
tinytex::tlmgr_install("jknapltx")
library(consensus)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
por
por41 <- parse_profile_of_rankings("1, a ≻ b ≻ c ≻ d,
1, a ≻ d ≻ b ≻ c,
1, d ≻ a ≻ c ≻ b")
por41
por41
votrix(por)
scorix(por)
library(consensus)
scorix(por)
scorix(por)
library(consensus)
scorix(por)
scorix(por)
library(consensus)
scorix(por)
library(consensus)
scorix(por)
scorix(por41)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
scorix(por41)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(devtools)
use_c("votrix")
library(consensus)
votrix(por41)
document()
library(consensus)
votrix(por41)
library(consensus)
library(consensus)
save.image()
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
library(consensus)
scorix(por41)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
library(consensus)
scorix(por41)
por41
por <- parse_profile_of_rankings("1, c1 ≻ c4 ≻ c3 ≻ c2,
1, c2 ≻ c1 ~ c3 ≻ c4,
1, c1 ~ c3 ≻ c4 ~ c2")
library(consensus)
por <- parse_profile_of_rankings("1, c1 ≻ c4 ≻ c3 ≻ c2,
1, c2 ≻ c1 ~ c3 ≻ c4,
1, c1 ~ c3 ≻ c4 ~ c2")
por <- parse_profile_of_rankings("1, c1 ≻ c4 ≻ c3 ≻ c2,
1, c2 ≻ c1 ~ c3 ≻ c4,
1, c1 ~ c3 ≻ c4 ~ c2")
por
borda(por)
borda_count(por)
b <- borda_count(por)
borda_count(por, seePoints = TRUE)
borda_count(por, verbose = TRUE)
por <- parse_profile_of_rankings("1, c1 ≻ c4 ≻ c3 ≻ c2,
1, c2 ≻ c1 ~ c3 ≻ c4,
1, c1 ~ c2 ~ c4 ≻ c3")
por
votrix(por)
scorix(por)
library(consensus)
scorix(por)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
por
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
por
library(consensus)
por
library(consensus)
por
por
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
library(consensus)
votrix(por)
library(consensus)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
votrix(por)
votrix(por)
library(consensus)
votrix(por)
library(consensus)
permutations(1:$)
permutations(1:4)
permutations(1:5)
permutations(1:6)
permutations(1:7)
permutations(1:8)
permutations(1:9)
permutations(1:10)
permutations(1:3)
library(consensus)
permutations(1:3, save = TRUE)
file.path(getwd(), "permutations", length(1:3), ".csv")
library(consensus)
file.path(getwd(), "permutations", length(1:3), ".csv")
permutations(1:3, save = TRUE)
library(consensus)
read_rankings("permutations3.csv")
library(tidyverse)
read_rankings("permutations3.csv")
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
matrix(ncol = 2)
matrix(ncol = 3)
matrix(ncol = 4)
library(consensus)
matrix(ncol = 4)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
library(consensus)
read_rankings("permutations3.csv", from_csv = TRUE)
read_rankings("prueba.csv", from_csv = TRUE)
read_rankings("R/prueba.csv", from_csv = TRUE)
read_rankings("R/prueba.csv", from_csv = TRUE)
library(devtools)
document()
use_test("as_por")
m1 <- matrix(sample(1:10, 25))
rep(do.call(sample(1:10, 25)), 5)
rep(do.call(sample, 1:10, 25)), 5)
rep(do.call(sample, list(1:10, 25)), 5)
?do.cal
?do.call
rep(do.call("sample", list(1:10, 25)), 5)
rep(do.call("sample", list(1:10, 25, rep = T)), 5)
rep(do.call("sample", list(1:10, 5)), 5)
m1 <- matrix(replicate(sample(1:10, 5), 5))
sample(1:10, 5)
m1 <- matrix(replicate(5, sample(1:10, 5)))
m1
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m1
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m2 <- sample(1:10, 25)
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m2 <- matrix(sample(1:10, 25, replace = TRUE), ncol = 5)
m1
m2
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m2 <- matrix(sample(1:10, 50, replace = TRUE), ncol = 5)
m2
as_por(m1)
as_por("m1")
library(consensus)
as_por(m1)
library(tidyverse)
as_por(m1)
as_por(m2)
get_ranking(as_por(m1), 1)
library(testthat)
por_m1
as_por(m1)
m1
library(consensus)
use_package("tibble")
use_package("stringr")
library(consensus)
format(get_ranking(m1, 1))
library(consensus)
library(consensus)
as_por(m1, criterion = "desc")
library(consensus)
as_por(m1, criterion = "desc")
as_por(m1, criterion = "desc")
library(consensus)
as_por(m1, criterion = "desc")
library(consensus)
as_por(m1, criterion = "desc")
?sort
as_por(m1)
library(consensus)
as_por(m1)
library(consensus)
as_por(m1)
as_por(m1, desc = TRUE)
ranking(c(4, 2, 3, 1), desc = TRUE)
ranking(c(4, 2, 3, 1), desc = DALSE)
ranking(c(4, 2, 3, 1), desc = FALSE)
as_por(m1, desc = TRUE)
as_por(m1)
as_por(m1, criterion = "desc")
as_por(m1, criterion = "asc")
library(consensus)
m1
criterion <- criterion == "desc"
library(consensus)
library(consensus)
as_por(m1, criterion = c("asc", "desc", "desc", "asc", "desc"))
library(consensus)
as_por(m1, criterion = c("asc", "desc", "desc", "asc", "desc"))
matrix[] <- t(apply(m1, 1, ranking, desc = TRUE))
t(apply(m1, 1, ranking, desc = TRUE))
t(apply(m1, 1, ranking, desc = c(TRUE, FALSE, FALSE, TRUE, FALSE))
)
t(apply(m1, 1, ranking, desc = c(TRUE, FALSE, FALSE, TRUE, FALSE)))
t(mapply(m1, 1, ranking, desc = c(TRUE, FALSE, FALSE, TRUE, FALSE)))
t(mapply(m1, ranking, desc = c(TRUE, FALSE, FALSE, TRUE, FALSE)))
?mapply
mapply(sum, m1)
m1
tapply(sum, m1)
?tapply
mapply(sum, as.data.frame(m1))
mapply(sum, as.data.frame(t(m1))
mapply(sum, as.data.frame(t(m1)))
mapply(sum, as.data.frame(t(m1)))
m1
mapply(sum, as.data.frame(m1))
mapply(sum, as.data.frame(t(m1)))
mapply(ranking, as.data.frame(t(m1)))
profile_of_rankings(mapply(ranking, as.data.frame(t(m1))))
mapply(ranking, as.data.frame(t(m1)))
mapply(ranking, as.data.frame(t(m1)), "asc")
mapply(ranking, as.data.frame(t(m1)), TRUE)
mapply(ranking, as.data.frame(t(m1)), desc = TRUE)
mapply(ranking, as.data.frame(t(m1)), desc = FALSE)
mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE))
mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE)))
mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE))
mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE))
mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE))
t(mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE)))
profile_of_rankings(t(mapply(ranking, as.data.frame(t(m1)), desc = c(TRUE, FALSE, FALSE, TRUE, FALSE))))
source('~/Desktop/Github/consensus/R/por.R', echo=TRUE)
rm(list = ls())
library(consensus)
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m1
as_por(m1)
format(get_ranking(por_m1, 1))
por_m1 <- as_por(m1)
format(get_ranking(por_m1, 1))
format(get_ranking(por_m1, 2))
format(get_ranking(por_m1, 3))
format(get_ranking(por_m1, 4))
format(get_ranking(por_m1, 5))
library(consensus)
library(consensus)
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m1
library(consensus)
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m1
library(consensus)
rm(m1)
rm(por_m1)
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m1
rm(m11)
rm(m1)
set.seed(2020)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
set.seed(123)
m1 <- matrix(replicate(5, sample(1:10, 5)) , byrow = TRUE, ncol = 5)
m1
xpect_equal(format(get_ranking(por_m1, 1)), "C4 ≻ C2 ≻ C1 ≻ C3 ≻ C5")
expect_equal(format(get_ranking(por_m1, 1)), "C4 ≻ C2 ≻ C1 ≻ C3 ≻ C5")
replicate(5, sample(1:10, 5)
)
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 6))
set.seed(123)
m1 <- t(replicate(5, sample(1:10, 5))
set.seed(123)
m1 <- t(replicate(5, sample(1:10, 5)))
m1
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
replicate(5, sample(1:10, 5))
set.seed(123)
replicate(5, sample(1:10, 5))
t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
set.seed(123)
set.seed(123)
t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
set.seed(123)
t(replicate(5, sample(1:10, 5)))
library(consensus)
library(consensus)
set.seed(123)
sample(10)
set.seed(123)
rnorm(10)
library(consensus)
library(consensus)
c("qq", "wer")
is.null(c("qq", "wer"))
is.null(c("qq", "wer"))
is.null(c("qq", "wer"))
is.null(c("qq", "wer"))
length(NULL)
length(NULL)
length(NULL)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
