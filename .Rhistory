condorcet_winner(r)
condorcet_loser(r)
votrix(r)
set.seed(700)
r <- random_profile_of_rankings(n,10)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
set.seed(800)
r <- random_profile_of_rankings(n,10)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
set.seed(900)
r <- random_profile_of_rankings(n,10)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
condorcet(r, seePoints = T)
rowSums(votrix(r))
set.seed(1000)
r <- random_profile_of_rankings(n,10)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
condorcet(r, seePoints = T)
rowSums(votrix(R))
rowSums(votrix(r))
colSums(votrix(r))
r <- random_profile_of_rankings(n,10)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
rowSums(r)
rowSums(votrix(r))
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
condorcet_loser(r)
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
rowSums(votrix(r))
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
rowSums(votrix(r))
r <- random_profile_of_rankings(n,10)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
rowSums(votrix(r))
votrix(r)[c(-1),c(-1)]
votrix(r)[c(-1,-2),c(-1,-2)]
r <- random_profile_of_rankings(n,11)
condorcet(r, seePoints = T)
r <- random_profile_of_rankings(n,11)
condorcet(r, seePoints = T)
condorcet_winner(r)
condorcet_loser(r)
votrix(r)
rowSums(votrix(r))
votrix(r)[c(-1),c(-1)]
library(consensus)
r <- randu
r <- random_profile_of_rankings(4, 10)
rowSums(r) > colSums(r)
r <- random_profile_of_rankings(4, 10)
rowSums(votrix(r)) > colSums(votrix(r))
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
library(consensus)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
r <- random_profile_of_rankings(4, 10)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
r
kemeny(r)
condorcet(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
kemeny(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
rowSums(votrix(r)
)
rowSums(votrix(r))
kemeny(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
votrix(r)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
kemeny(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
kemeny(r)
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(4, 10)
sum(rowSums(votrix(r)) > colSums(votrix(r)))
rowSums(votrix(r))
r <- random_profile_of_rankings(8,10)
r
votrix(r)
i6(r)
library(devtools)
document()
ncandidates <- 4
distinct <- 3
replicate(distinct, sample(1:ncandidates))
t(replicate(distinct, sample(1:ncandidates)))
t(replicate(distinct, sample(1:ncandidates))) %>%
tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
rankings <- t(replicate(distinct, sample(1:ncandidates))) %>%
tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
ok <- n_distinct(rankings)
??n_distinct
use_package("dplyr")
library(dplyr)
rankings <- t(replicate(distinct, sample(1:ncandidates))) %>%
tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
ok <- n_distinct(rankings)
ok
rankings
?rand_vect
rand_vect(5, 5)
rand_vect(5, 2)
rand_vect(5, 1)
rand_vect(5, 1)
rand_vect(5, 1)
rand_vect(5, 1)
rand_vect(5, 1)
rnorm(5,10/5,1)
rand_vect(10,5)
rand_vect(5,10)
rand_vect(5,20)
rand_vect(5,20)
rand_vect(5,20)
rand_vect(5,20)
rand_vect(5,20)
rand_vect(5,20)
rand_vect(5,20) == 0
library(consensus)
por01
condorcet(por01)
condorcet_winner(por01)
a <- condorcet_winner(por01)
a
a <- condorcet_loser(por01)
a
document()
library(consensus)
document()
library(consensus)
a <- condorcet_loser(por01)
a
library(consensus)
library(consensus)
library(consensus)
a <- condorcet_loser(por01)
a
a
condorcet_loser(por01)
condorcet_loser(por02)
condorcet_loser(por03)
library(consensus)
condorcet_loser(por03)
library(consensus)
condorcet_loser(por03)
library(consensus)
condorcet_loser(por03)
condorcet_winner(por03)
library(consensus)
condorcet_winner(por03)
library(consensus)
library(consensus)
condorcet_winner(por03)
condorcet_loser(por03)
condorcet_loser(por04)
a <- condorcet_loser(por04)
a
as.numeric(a)
r <- random_profile_of_rankings(8,10)
condorcet(r)
condorcet_winner(r)
condorcet_loser(r)
r <- random_profile_of_rankings(8,10)
condorcet(r)
condorcet_loser(r)
condorcet_winner(r)
condorcet(r, seePoints = T)
r <- random_profile_of_rankings(8,10)
condorcet(r, seePoints = T)
r <- random_profile_of_rankings(8,10)
condorcet(r, seePoints = T)
r <- random_profile_of_rankings(8,10)
condorcet(r, seePoints = T)
condorcet_loser()
condorcet_loser(r)
condorcet_winner(r)
library(consensus)
condorcet_winner(r)
condorcet_loser(r)
library(consensus)
library(consensus)
condorcet_loser(r)
library(consensus)
library(consensus)
condorcet_loser(r)
library(consensus)
condorcet_loser(r)
library(consensus)
library(consensus)
condorcet_loser(r)
a <. condorcet_loser(r)
a <- condorcet_loser(r)
a
as.numeric(a)
random_profile_of_rankings(11,10,distinct = 8)
factorial(4)
library(consensus)
factorial(4)
random_profile_of_rankings(11,10,distinct = 8)
warnings()
library(consensus)
warnings()
random_profile_of_rankings(11,10,distinct = 8)
rand_vect <- function(N, M, sd = 1, pos.only = TRUE) {
vec <- rnorm(N, M/N, sd)
if (abs(sum(vec)) < 0.01) vec <- vec + 1
vec <- round(vec / sum(vec) * M)
deviation <- M - sum(vec)
for (. in seq_len(abs(deviation))) {
vec[i] <- vec[i <- sample(N, 1)] + sign(deviation)
}
if (pos.only) while (any(vec < 0)) {
negs <- vec < 0
pos  <- vec > 0
vec[negs][i] <- vec[negs][i <- sample(sum(negs), 1)] + 1
vec[pos][i]  <- vec[pos ][i <- sample(sum(pos ), 1)] - 1
}
vec
}
rand_vect(8,11)
rand_vect(8,11)
rand_vect(8,11)
rand_vect(8,11)
rand_vect(8,11)
rand_vect(8,11)
rand_vect(8,11)
library(consensus)
rand_vect(8,11)
random_profile_of_rankings(11,10,distinct = 8)
library(consensus)
random_profile_of_rankings(11,10,distinct = 8)
random_profile_of_rankings(11,10,distinct = 8)
random_profile_of_rankings(11,10,distinct = 8)
random_profile_of_rankings(11,10,distinct = 8)
random_profile_of_rankings(11,10,distinct = 8)
random_profile_of_rankings(11,10,distinct = 8)
random_profile_of_rankings(4,100,distinct = 30)
library(consensus)
?n_distinct
use_package("dplyr")
library(consensus)
library(consensus)
170/60
library(consensus)
ranking(c(1,3,3,2,1,4))
a <- ranking(c(1,3,3,2,1,4))
ranking_to_lineal(a)
a <- ranking(c(1,3,3,2,3,4))
a
ranking_to_lineal(a)
as.numeric(ranking_to_lineal(a))
library(consensus)
rm(ranking_to_lineal())
rm(ranking_to_lineal)
document()
rm(rand_vect())
rm(rand_vect)
document()
library(consensus)
document()
library(consensus)
document()
document()
library(consensus)
library(consensus)
parse_profile_of_rankings("5, C4 ≻ C1 ≻ C3 ≻ C2,
2, C4 ≻ C3 ≻ C2 ≻ C1,
3, C3 ≻ C4 ≻ C1 ≻ C2")
a <- parse_profile_of_rankings("5, C4 ≻ C1 ≻ C3 ≻ C2,
2, C4 ≻ C3 ≻ C2 ≻ C1,
3, C3 ≻ C4 ≻ C1 ≻ C2")
azzini(0)
azzini
om <- votrix(a)
azzini(0)
votrix(a)
rowSums(votrix(r)) >= colSums(votrix(r))
rowSums(votrix(a)) >= colSums(votrix(a))
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10)
condorcet(a, seePoints = T)
a
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a
dput(a)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
a <- random_profile_of_rankings(4,10,distinct = 3)
condorcet(a, seePoints = T)
dput(a)
paste("(",1:4,",",1:4,")")
paste0("(",1:4,",",1:4,")")
paste0("(",0,",",1:4,")")
paste0("(",1:4,",",0,")")
por01$candidates
n <- 4
nodesrows <- paste0("(",0,",",n:1,")")
nodesrows <- paste("\\node at ",nodesrows,"    {\\Large $,",alt,"$};")
alt <- letters[1:4]
nodesrows <- paste("\\node at ",nodesrows,"    {\\Large $,",alt,"$};")
nodesrows
paste(nodesrows, collapse = "\n")
library(consensus)
