t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
set.seed(123)
set.seed(123)
t(replicate(5, sample(1:10, 5)))
t(replicate(5, sample(1:10, 5)))
set.seed(123)
t(replicate(5, sample(1:10, 5)))
library(consensus)
library(consensus)
set.seed(123)
sample(10)
set.seed(123)
rnorm(10)
library(consensus)
library(consensus)
c("qq", "wer")
is.null(c("qq", "wer"))
is.null(c("qq", "wer"))
is.null(c("qq", "wer"))
is.null(c("qq", "wer"))
length(NULL)
length(NULL)
length(NULL)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
por01
library(consensus)
por01
beatpath(por01)
kendall(parse_ranking("a~b~c>d"), parse_ranking("a>b~c>d"))
kendall(parse_ranking("a>b>c>d"), parse_ranking("a>b>d>c"))
library(consensus)
kendall(parse_ranking("a>b>c>d"), parse_ranking("a>b>d>c"))
kendall(parse_ranking("a>b>c>d"), parse_ranking("b>b>d>c"))
kendall(parse_ranking("a>b>c>d"), parse_ranking("b>a>d>c"))
kendall(parse_ranking("a>b>c>d"), parse_ranking("b>d>c>a"))
read.csv("perms/perm4.csv")
perm4 <- read.csv("perms/perm4.csv")
library(consensus)
perm4 <- read.csv("perms/perm4.csv")
kemeny(por01)
library(consensus)
kemeny(por01)
kemeny(por01)
library(tidyverse)
kemeny(por01)
perm4
as_por(perm4)
library(consensus)
kemeny(por01)
library(consensus)
kemeny(por01)
library(consensus)
kemeny(por01)
library(consensus)
kemeny(por01)
library(consensus)
kemeny(por01)
library(consensus)
kemeny(por01)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
por01
fact(4)
4^4
read.csv("perms/perm4.csv")
read.csv("perms/perm4.csv", header = FALSE)
library(consensus)
library(consensus)
read.csv("perms/perm4.csv", header = FALSE)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
get_ranking(por01)
get_ranking(por01, 1)
get_ranking(por01, 2)
get_ranking(por01, 3)
get_ranking(por01, 4)
library(consensus)
get_ranking(por01, 4)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
library(consensus)
kemeny(por01, details = TRUE)
library(consensus)
library(consensus)
kemeny(por01, details = TRUE)
random_profile_of_rankings(4, 50)
por <- random_profile_of_rankings(4, 50)
kemeny(por, details = TRUE)
kemeny(por, details = TRUE)
kemeny(por, details = TRUE)
kemeny(por, details = TRUE)
kemeny(por, details = TRUE)
kemeny(por, details = TRUE)
por <- random_profile_of_rankings(5, 50)
por <- random_profile_of_rankings(5, 10)
kemeny(por, details = TRUE)
kemeny(por, details = TRUE)
por <- random_profile_of_rankings(5, 50)
kemeny(por, details = TRUE)
por <- random_profile_of_rankings(6, 10)
kemeny(por, details = TRUE)
por <- random_profile_of_rankings(7, 10)
kemeny(por, details = TRUE)
por <- random_profile_of_rankings(8, 10)
kemeny(por, details = TRUE)
por <- random_profile_of_rankings(6, 10)
kemeny(por, details = TRUE)
kemeny(por)
library(consensus)
kemeny(por)
kemeny(por, parallel = TRUE)
por <- random_profile_of_rankings(7, 10)
??detectCores
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
library(parallel)
detectCores()
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
stopCluster(cl)
library(consensus)
kemeny(por, parallel = TRUE)
kemeny(por, parallel = TRUE)
kemeny(por, parallel = FALSE)
library(consensus)
kemeny(por, parallel = FALSE)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
read.csv("perms/perm7.csv", header = FALSE)
read.csv("perms/perm8.csv", header = FALSE)
read.csv("perms/perm9.csv", header = FALSE)
library(consensus)
library(usethis)
use_data_raw("perm3")
por01
copia <- por01
copia$candidates <- c("aa", "bb", "cc", "dd")
por01
copia
copia$candidates
copia
copia$profileOfRankings
library(consensus)
copia$profileOfRankings
copia$candidates <- c("aa", "bb", "cc", "dd")
por01
get_ranking(por01)
set_candidates(por01, c("aa", "bb", "cc", "dd"))
document()
library(devtools)
document()
set_candidates(por01, c("aa", "bb", "cc", "dd"))
por01
sapply(por01$profileOfRankings, is.ranking)
apply(por01$profileOfRankings, 1, is.ranking)
revs <- read.csv("perms/perm7.csv", header = FALSE)
apply(revs, 1, is.ranking)
library(consensus)
kemeny(por)
library(usethis)
use_git_ignore(directory = "benchmarking/")
use_git_ignore("*", directory = "benchmarking")
use_git_ignore("paper")
library(consensus)
use_git_ignore("paper")
use_git_ignore("tablasNoelia.tex")
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm3.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm3.R')
use_data_raw("perm4")
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm4.R')
perm3
perm4
use_data_raw("perm5")
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm5.R')
use_data_raw("perm6")
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm6.R')
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm6.R')
use_data_raw("perm7")
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm7.R')
use_data_raw("perm8")
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/data-raw/perm8.R')
kemeny(por01)
por <- random_profile_of_rankings(7, 10, withties = TRUE)
por
kemeny(por)
library(consensus)
kemeny(por)
library(consensus)
kemeny(por)
library(consensus)
kemeny(por)
library(consensus)
kemeny(por)
library(consensus)
kemeny(por)
copia <- por01
set_names(copia, c(C1", "C2", "C3", "C4"))
set_names(copia, c("C1", "C2", "C3", "C4"))
copia
library(consensus)
kemeny(por)
kemeny(por, parallel = TRUE)
parallel::detectCores()
library(parallel)
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
library(consensus)
kemeny(por, parallel = TRUE)
kemeny(por01, parallel = TRUE)
library(consensus)
kemeny(por01, parallel = TRUE)
kemeny(por01, parallel = FALSE)
library(consensus)
distances
library(consensus)
kemeny(por01, parallel = FALSE)
kemeny(por01, parallel = TRUE)
library(consensus)
kemeny(por01, parallel = TRUE)
library(consensus)
kemeny(por01, parallel = TRUE)
library(consensus)
library(consensus)
por01
por07
votrix(por07)
por02
por03
por04
por05
por06
por07
toLatex(por07)
votrix(por04)
por06
por07
por09
por01
por04
por04
votrix(por04)
beatpath(por04)
beatpath(por01)
por04
votrix(por04)
por01
por01$votrix
beatpath(por01)
por07
por06
votrixÃ§(por06)
votrix(por06)
votrix(por01)
library(consensus)
votrix(por01)
beatpath(por01)
por01
votrix(por01)
scorix(por01)
por01
por09
votrix(por09)
toLatex(por09)
por06
por07
por08
por09
plurality(por07)
plurality(por07, seePoints = TRUE)
por07
por09
por08
por06
plurality(por06)
plurality(por06, seePoints = TRUE)
library(consensus)
por06
plurality(por06, seePoints = TRUE)
plurality(por06, seePoints = TRUE, verbose = TRUE)
library(consensus)
por01
plurality(por01)
plurality(por01)
por01
por03
por02
por06
por01
por06
por07
toLatex(por07)
borda_count(por06)
por01
votrix(opor06)
votrix(por06)
por06
por07
votrix(por07)
perm4
library(consensus)
perm4
toLatex(perm4)
kemeny(por04)
library(consensus)
por04
perm4
por10
toLatex(por10)
votrix(por10)
por10
por10$votrix
ranking(c(3, 4, 1))
library(consensus)
source('~/Library/Mobile Documents/com~apple~CloudDocs/consensus/tests/testthat.R', echo=TRUE)
library(usethis)
use_package("tibble")
library(consensus)
por07
por09
votrix(por09)
copeland(por09)
votrix(por10)
wvm(por11)
??fractions
library(MASS)
wvm(por11)
library(consensus)
wvm(por11)
wvm(por11)
library(consensus)
wvm(por11)
install.packages("RankAggreg")
library(votesys)
?votesys::borda_method()
raw <- c(
rep(c('m', 'n', 'c', 'k'), 42),
rep(c('n', 'c', 'k', 'm'), 26),
rep(c('c', 'k', 'n', 'm'), 15),
rep(c('k', 'c', 'n', 'm'), 17)
)
raw
raw <- matrix(raw, ncol = 4, byrow = TRUE)
raw
vote <- create_vote(raw, xtype = 2, candidate = c('m', 'n', 'c', 'k'))
vote
votesys::create_vote()
votesys::create_vote
?votesys::create_vote
por01
?votesys::cdc_kemenyyoung()
m <- matrix(c(0, 58, 58, 58, 42, 0, 32, 32, 42, 68, 0, 17, 42, 68, 83, 0), nr = 4)
colnames(m) <- c('m', 'n', 'c', 'k')
rownames(m) <- c('m', 'n', 'c', 'k')
y <- cdc_kemenyyoung(m, keep_all_link = TRUE) # winner is n
y
m <- matrix(c(0, 58, 58, 58, 42, 0, 32, 32, 42, 68, 0, 17, 42, 68, 83, 0), nr = 5)
colnames(m) <- c('m', 'n', 'c', 'k', 'a')
rownames(m) <- c('m', 'n', 'c', 'k', 'a')
y <- cdc_kemenyyoung(m, keep_all_link = TRUE) # winner is n
m <- matrix(c(0, 58, 58, 58, 42, 0, 32, 32, 42, 68, 0, 17, 42, 68, 83, 0), nr = 4)
colnames(m) <- c('m', 'n', 'c', 'k')
rownames(m) <- c('m', 'n', 'c', 'k')
y <- cdc_kemenyyoung(m, keep_all_link = TRUE) # winner is n
m
cdc_kemenyyoung
por04
por04
library(consensus)
por04
kemeny(por04)
?votesys::borda_method()
raw <- c(
rep(c('m', 'n', 'c', 'k'), 42),
rep(c('n', 'c', 'k', 'm'), 26),
rep(c('c', 'k', 'n', 'm'), 15),
rep(c('k', 'c', 'n', 'm'), 17)
)
raw <- matrix(raw, ncol = 4, byrow = TRUE)
vote <- create_vote(raw, xtype = 2, candidate = c('m', 'n', 'c', 'k'))
y <- borda_method(vote)
y
?create_vote
# xtype is 1
raw <- rbind(
c(1, 2, 5, 3, 3),
c(2, 1, 1, 3, 5),
c(1, 2, 5, 3, 4),
c(1, 2, 5, 3, 4),
c(NA, NA, NA, NA, NA),
c(NA, 3, 5, 1, 2),
c(NA, 999, NA, 1, 5)
)
vote <- create_vote(raw, xtype = 1, isna = 999)
vote
# xtype is 1
raw <- rbind(
c(1, 5, 5, 3),
c(2, 1, 1, 3),
c(1, 2, 5, 3),
c(1, 5, 3, 4)
)
vote <- create_vote(raw, xtype = 1)
vote
borda_method(vote)
vote
borda_method(vote)
# xtype is 1
raw <- rbind(
c(1, 2, 2, 4)
)
vote <- create_vote(raw, xtype = 1)
vote
borda_method(vote)
kemeny(vote)
cdc_kemenyyoung(vote)
?ConsRank
consensus::ranking(-1, 3, 5, 2)
consensus::ranking(c(-1, 3, 5, 2))
v <- c(5, 9, 1, 7)
names(v) <- c("a", "b", "c", "d")
ranking(v, desc = TRUE)
consensus::ranking(c(3, 4, 1, 2), desc = TRUE)
consensus::parse_ranking("c \succ a \succ b \succ d")
consensus::parse_ranking("c \\succ a \\succ b \\succ d")
consensus::parse_ranking("c \u007E a \u227B b \u227B d")
t4a
t5a
library(tibble)
t4a['elapsed']
kemeny_times <- tribble(~nc, ~parallel, ~time,
4, FALSE, t4a['elapsed'],
4, TRUE, t4b['elapsed'],
5, FALSE, t5a['elapsed'],
5, TRUE, t5b['elapsed'],
6, FALSE, t6a['elapsed'],
6, TRUE, t6b['elapsed'],
7, FALSE, t7a['elapsed'],
7, TRUE, t7b['elapsed'],
8, FALSE, t8a['elapsed'],
8, TRUE, t8b['elapsed'],
9, FALSE, t9a['elapsed'],
9, TRUE, t9b['elapsed'],
10, FALSE, t10a['elapsed'],
10, TRUE, t10b['elapsed']
)
kemeny_times
?system.time
library(ggplot2)
ggplot(kemeny_times, aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
4000/60
ggplot(kemeny_times %>% filter(nc<6), aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
ggplot(kemeny_times %>% filter(nc < 6), aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
kemeny_times %>% filter(nc < 6)
library(tidyverse)
ggplot(kemeny_times, aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
ggplot(kemeny_times %>% filter(nc < 6), aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
ggplot(kemeny_times %>% filter(nc < 7), aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
ggplot(kemeny_times %>% filter(nc < 8), aes(nc, time, color = parallel)) +
geom_line() +
geom_point()
library(consensus)
save(kemeny_times)
save(kemeny_times, file = "kemeny_times")
