random_profile_of_rankings()
?rapply
library(consensus)
random_profile_of_rankings()
library(tidyverse)
random_profile_of_rankings()
set.seed(2020)
random_profile_of_rankings()
set.seed(2020)
as-numeric(random_profile_of_rankings())
as.numeric(random_profile_of_rankings())
as.matrix(random_profile_of_rankings())
set.seed(2020)
as.matrix(random_profile_of_rankings())
set.seed(2020)
as.matrix(random_profile_of_rankings())
set.seed(2020)
random_profile_of_rankings()
library(devtools)
random_profile_of_rankings()
document()
library(consensus)
random_profile_of_rankings()
random_profile_of_rankings(seed = 20)
random_profile_of_rankings(seed = 20)
library(consensus)
random_profile_of_rankings(seed = 20)
?outer
+(outer(v1, v1, `==`))
+(outer(c(3,1,2), c(3,2,1) `<=`))
v1 <- c(2, 2, 3, 2, 3, 4, 4)
+(outer(v1, v1, `==`))
+(outer(v1, v1, `>=`))
(outer(v1, v1, `>=`))
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
m
source('~/Desktop/Github/consensus/R/ranking.R')
library(consensus)
library(consensus)
library(consensus)
rm(list=ls())
library(consensus)
library(consensus)
library(devtools)
install_github("noeliarico/dists")
install_github("noeliarico/dists")
library(dists)
data(toy_data)
dists::hello()
install_github("noeliarico/dists")
library(dists)
data(toy_data)
toy_data
library(consensus)
prueba <- list(cluster1 = structure(c(2.23606801033, 0.002666276414, 2.23606801033,
0.002666276414), .Dim = c(2L, 2L), .Dimnames = list(c("euc",
"cos"), c("x3", "x5"))))
prueba
prueba %>% unlist()
prueba <- unlist(prueba)
prueba
as.matrix(prueba)
prueba <- list(cluster1 = structure(c(2.23606801033, 0.002666276414, 2.23606801033,
0.002666276414), .Dim = c(2L, 2L), .Dimnames = list(c("euc",
"cos"), c("x3", "x5"))))
prueba <- as.matrix(prueba)
prueba
prueba <- list(cluster1 = structure(c(2.23606801033, 0.002666276414, 2.23606801033,
0.002666276414), .Dim = c(2L, 2L), .Dimnames = list(c("euc",
"cos"), c("x3", "x5"))))
deframe(prueba)
prueba
prueba[1,2]
prueba[1][1,2]
prueba[1]
prueba[[1]]
prueba[[1]][1,2] <- 1
prueba[[1]][2,1] <- 3
preuba
prueba
prueba[[1]][2,2] <- 5
prueba[[1]]
document()
library(tidytools)
library(devtools)
document()
library(consensus)
library(devtools)
as.por(prueba[[1]])
prueba[[1]]
library(consensus)
as.por(prueba[[1]])
library(consensus)
matrix(c(3, 5, 1, 2))
matrix(c(3, 5, 1, 2), byrow = TRUE)
matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4)
as.por(matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4))
library(consensus)
as.por(matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4))
library(tidyverse)
as.por(matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4))
library(consensus)
as.por(matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4))
library(consensus)
as.por(matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4))
library(consensus)
as.por(matrix(c(3, 5, 1, 2), byrow = TRUE, ncol = 4))
library(consensus)
library(consensus)
library(consensus)
matrix(c(2, 3, 5, 4))
matrix(c(2, 3, 5, 4), ncol ? 2)
matrix(c(2, 3, 5, 4), ncol = 2)
matrix <- matrix(c(2, 3, 5, 4), ncol = 2)
t(as.matrix(apply(matrix, 1, ranking)))
colnames(matrix) <- c("a", "b")
colnames(matrix) <- c("c", "d")
matrix
colnames(matrix) <- c("a", "b")
rownames(matrix) <- c("a", "b")
matrix
t(as.matrix(apply(matrix, 1, ranking)))
rownames(matrix) <- c("d", "e")
t(as.matrix(apply(matrix, 1, ranking)))
matrix
matrix[2, 1] <- 7
matrix
t(as.matrix(apply(matrix, 1, ranking)))
matrix[2, 1] <- 1
matrix[2, 2] <- 0
t(as.matrix(apply(matrix, 1, ranking)))
matrix
matrix <- matrix(c(3, 5))
matrix
matrix <- matrix(c(3, 5), ncol = 2)
matrix
colnames(matrix) <- c("a", "b")
rownames(matrix) <- c("c")
matrix
t(as.matrix(apply(matrix, 1, ranking)))
profile_of_rankings(t(as.matrix(apply(matrix, 1, ranking))))
library(tidyverse)
profile_of_rankings(t(as.matrix(apply(matrix, 1, ranking))))
library(consensus)
library(consensus)
library(tidyverse)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
c(5)
sort(c(5))
library(consensus)
library(consensus)
for(i in 1:5) print(i)
for(i in 1:ยบ) print(i)
for(i in 1:1) print(i)
matrix(5)
unique.matrixmatrix(5))
unique.matrix(matrix(5))
document()
library(devtools)
document()
profile_of_rankings(matrix(5))
profile_of_rankings(matrix(1))
m <- matrix(1)
names(m) <- "A"
profile_of_rankings(matrix(1))
profile_of_rankings(m)
m
m <- matrix(1)
colnames(m) <- "A"
profile_of_rankings(m)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
?identical
library(consensus)
library(consensus)
library(consensus)
library(consensus)
matrix(c(1, 1))
matrix(c(1, 1))[1,]
class(matrix(c(1, 1))[1,])
class(matrix(c(1, 1))[1, , drop = FALSE])
matrix(c(1, 1))[1, , drop = FALSE]
m
class(matrix(c(1, 1))[1, , drop = FALSE])
matrix(c(1, 1))[1, , drop = FALSE]
m[1, 1]
class(matrix(c(1, 1))[1, , drop = FALSE])
matrix(sample(20, 1:100), ncol = 5)
matrix(sample(1:100, 20), ncol = 5)
apply(matrix(sample(1:100, 20), ncol = 5), 1, function(x) print(class(x)))
apply(matrix(sample(1:100, 20), ncol = 5), 1, function(x) print(class(x)), drop = FALSE)
apply(matrix(sample(1:100, 20), ncol = 5), 1, function(x) print(class(x)), simplify = FALSE)
profile_of_rankings(1)
profile_of_rankings([1])
profile_of_rankings(matrix(1))
m <- matrix(1)
colnames(m) <- "A"
rownames(m) <- "B"
m
profile_of_rankings(matrix(1))
profile_of_rankings(m)
library(consensus)
library(consensus)
profile_of_rankings(m)
matrix(c(1, 1))
unique.rankings(matrix(c(1, 1)))
unique.matrix(matrix(c(1, 1)))
unique.matrix(matrix(c(1, 1)))[1,]
unique.matrix(matrix(c(1, 1)))[1, , frop = FALSE]
unique.matrix(matrix(c(1, 1)))[1, , drop = FALSE]
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
r
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
library(consensus)
use_r
library(tidytools)
library(devtools)
use_r(por)
use_r("por")
use_r("rr_scoring")
use_c("scoring")
use_test("rr_tapproval")
use_test("rr_borda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.1.rda")
use_data(table2.1)
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.2.rda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.3.rda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.4.rda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.5.rda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.9.rda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.11.rda")
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table4.1.rda")
use_data(table2.2)
use_data(table2.3)
use_data(table2.4)
use_data(table2.4)
use_data(table2.5)
use_data(table2.9)
use_data(table2.10)
use_data(table2.11)
use_data(table4.11)
use_data(table4.1)
load("/Users/noelia/Desktop/consensusEscritorio/R/data/table2.10.rda")
use_data(table2.10)
rm(list = ls())
library(consensus)
library(consensus)
library(clusterlab)
set.seed(2019)
data <- clusterlab(centers = 3, r = 1,
sdvec = c(0.5,0.5,1),
alphas = c(1, 2, 3),
numbervec = c(20, 20, 20),
features = 2)
points <- t(data$synthetic_data)
dpor <- data.frame()
for(pvalue in seq(1, 1000, 5)){
distances <- ranking(as.matrix(dist(points, method = "minkowski", p = pvalue))[1, -1])
dpor <- rbind(dpor, distances)
}
por <- profile_of_rankings(as.matrix(dpor))
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
??benchmark
install.packages("benchmarking")
install.packages("Benchmarking")
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
library("Benchmarking")
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
install.packages("rbenchmark")
library("rbenchmark")
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
library(consensus)
library(consensus)
install.packages("rbenchmark")
install.packages("rbenchmark")
library("rbenchmark")
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
document()
library(consensus)
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
library(consensus)
library(consensus)
library(consensus)
document()
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
por <- profile_of_rankings(as.matrix(dpor))
library(tidyverse)
source('~/Desktop/consensusEscritorio/R/benchmarking.R')
use_r("scoringc")
source('~/Desktop/consensusEscritorio/R/benchmarking.R')
document()
library(consensus)
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
library(consensus)
por
library(consensus)
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
library(consensus)
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
?use_c
document()
document
document()
document()
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
library(consensus)
library(consensus)
scoring(por, method = "borda")
scoringc(por, method = "borda")
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
rep(sample(1:5, 4, replace = T), 5)
?rep
random_profile_of_rankings(20)
por < random_profile_of_rankings(200)
benchmark(
"r" = {scoring(por, method = "borda")},
"c" = {scoringc(por, method = "borda")}
)
random_profile_of_rankings(20)
sample(1:ncandidates)
sample(1:5)
library(consensus)
random_profile_of_rankings(5)
random_profile_of_rankings(5, 4)
random_profile_of_rankings(5, 4, seePoints = TRUE)
random_profile_of_rankings(5, 4, withties = TRUE)
library(consensus)
library(consensus)
random_profile_of_rankings(5, 4, withties = TRUE)
random_profile_of_rankings(5, 4, withties = TRUE)
library(consensus)
random_profile_of_rankings(5, 4, withties = TRUE)
library(consensus)
ncandidates <- 5
nranking <- 4
sample(1:(sample(1:ncandidates, 1))
, ncandidate, replace = TRUE
)
replicate(nranking, sample(1:(sample(1:ncandidates, 1)), ncandidates, replace = TRUE))
library(consensus)
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
library(consensus)
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
library(consensus)
replicate(nranking, sample(1:(sample(1:(ncandidates-1), 1)), ncandidates, replace = TRUE))
random_profile_of_rankings(5, 4, withties = TRUE)
library(consensus)
random_profile_of_rankings(5, 4, withties = TRUE)
library(consensus)
random_profile_of_rankings(5, 4, withties = TRUE)
as.numeric(random_profile_of_rankings(5, 4, withties = TRUE))
matrix(random_profile_of_rankings(5, 4, withties = TRUE))
random_profile_of_rankings(5, 4, withties = TRUE)[1,2]
random_profile_of_rankings(5, 4, withties = TRUE)[1,3]
random_profile_of_rankings(5, 4, withties = TRUE)[1,4]
random_profile_of_rankings(5, 4, withties = TRUE)[1,]
as.matrix(random_profile_of_rankings(5, 4, withties = TRUE))
as.matrix(random_profile_of_rankings(5, 4, withties = TRUE))
as.matrix(random_profile_of_rankings(5, 4, withties = TRUE))
as.matrix(random_profile_of_rankings(5, 4, withties = TRUE))
as.matrix(random_profile_of_rankings(5, 4, withties = TRUE))
random_profile_of_rankings(5, 4, withties = TRUE)
table2.1
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
class(parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5"))
library(consensus)
class(parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5"))
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
parse_ranking("a โผ b โผ c โป d โผ e")
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
?strsplit
library(consensus)
?strsplit
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
strsplit("holaโปadios", "โป")
unlist(strsplit("holaโปadios", "โป"))
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
strsplit("C2 โผ C3 โผ C4 โป C1 โผ C5"", "โป|โผ")
strsplit("C2 โผ C3 โผ C4 โป C1 โผ C5", "โป|โผ")
strsplit("C2 โผ C3 โผ C4 โป C1 โผ C5", "โป|โผ", perl = TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "โป|โผ", perl = TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "(โป|โผ)", perl = TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "โป", perl = TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "4", perl = TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "4", perl=TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "4", perl=FALSE)
library(stringr)
str_split("C2 โผ C3 โผ C4 โป C1 โผ C5", "4")
strsplit("C2โผC3โผC4โปC1โผC5", "(?=[โป~])", perl = TRUE)
strsplit("C2โผC3โผC4โปC1โผC5", "(?=[โปโผ])", perl = TRUE)
strsplit("hola")
strsplit("hola", "")
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(testthat)
r <- parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
r
expect_that(class(r), "")
expect_s3_class(r, "ranking")
library(consensus)
use_package("stringr")
library(consensus)
library(consensus)
library(consensus)
use_package("stringr")
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
library(consensus)
library(consensus)
use_r("rr_scoring_points")
r <- parse_ranking("C2 โผ C3 โผ C4 โป C1 โผ C5")
c
calculatePoints(r, "borda")
r <- parse_ranking("C3 โผ C5 โป C4 โป C1 โผ C2")
calculatePoints(r, "borda")
