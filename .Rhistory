1, C>D>E>A>B")
r
condorcet(r)
kemeny(r)
r <- parse_profile_of_rankings("2, D>A>B>C>E,
2, E>A>B>C>D,
1, C>D>E>A>B")
kemeny(r)
condorcet(r)
library(consensus)
condorcet(r, seePoints = TRUE)
r <- parse_profile_of_rankings("2, F>G>D>A>B>C>E
2, F>G>E>A>B>C>D
1, F>G>C>D>E>A>B
2, G>F>D>A>B>C>E
2, G>F>E>A>B>C>D
1, G>F>C>D>E>A>B")
r <- parse_profile_of_rankings("2, F>G>D>A>B>C>E,
2, F>G>E>A>B>C>D,
1, F>G>C>D>E>A>B,
2, G>F>D>A>B>C>E,
2, G>F>E>A>B>C>D,
1, G>F>C>D>E>A>B")
kemeny(r)
library(consensus)
r <- parse_profile_of_rankings("2, F>G>D>A>B>C>E,
2, F>G>E>A>B>C>D,
1, F>G>C>D>E>A>B,
2, G>F>D>A>B>C>E,
2, G>F>E>A>B>C>D,
1, G>F>C>D>E>A>B")
kemeny(r)
v <- votrix(r)
rowSums(v > 10)
r
votrix(r)
v <- votrix(r)
v
rowSums(v > 10)
rowSums(v > 5)
kemeny(r)
borda_count(r)
r <- random_profile_of_rankings(6, 20)
condorcet(r)
v <- votrix(r)
rowSums(v > 5)
kemeny(r)
rowSums(v > 10)
r <- parse_profile_of_rankings("2, D>A>B>C>E,
2, E>A>B>C>D,
1, C>D>E>A>B")
r <- parse_profile_of_rankings("2, F>G>D>A>B>C>E,
2, F>G>E>A>B>C>D,
1, F>G>C>D>E>A>B,
2, G>F>D>A>B>C>E,
2, G>F>E>A>B>C>D,
1, G>F>C>D>E>A>B")
kemeny(r)
library(consensus)
library(consensus)
r <- random_profile_of_rankings(4, 10)
r
tideman(r)
tideman(r, seeTrace = T)
library(consensus)
tideman(r, seeTrace = T)
library(consensus)
tideman(r, seeTrace = T)
r <- random_profile_of_rankings(7, 100)
tideman(r, seeTrace = T)
r <- random_profile_of_rankings(7, 100)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
r <- random_profile_of_rankings(7, 100)
tideman(r, seeTrace = T)
r <- random_profile_of_rankings(7, 100)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seePoints =  = T)
tideman(r, seePoints =  T)
library(consensus)
tideman(r, seePoints =  T)
tideman(r, seePoints =  T)
library(consensus)
tideman(r, seePoints =  T)
tideman(r, seePoints =  T)
tideman(r, seePoints =  T)
tideman(r, seePoints =  T)
tideman(r, seePoints =  T)
tideman(r <- random_profile_of_rankings(8, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(8, 100), seePoints =  T)
r
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
tideman(r <- random_profile_of_rankings(4, 100), seePoints =  T)
r
tideman(r, seeTrace = TRUE)
sink("mejorparatideman.txt")
tideman(r, seeTrace = TRUE)
sink()
tideman(r, seeTrace = TRUE, break_ties = parse_ranking("C2 > C1 > C4 > C3"))
tideman(r, seeTrace = TRUE, break_ties = parse_ranking("C2 > C1 > C4 > C3"))
sink("mejorparatideman.txt")
tideman(r, seeTrace = TRUE, break_ties = parse_ranking("C2 > C1 > C4 > C3"))
sink()
install.packages("utf8")
library(utf8)
output_utf8()
kemeny(por01)
kemeny(por01, parallel = T)
litvak(por01, parallel = T)
??detectCores
library(parallel)
detectCores()
output_utf8()
r
tideman(r, seeTrace = TRUE)
r
votrix(r)
r <- random_profile_of_rankings(6, 15)
r <- random_profile_of_rankings(4, 15)
tideman(r, seePoints = T)
tideman(r, seePoints = T)
r
p <- r
r <- random_profile_of_rankings(4, 15, distinct = 3)
??n_distinct
usethis::use_package("dplyr")
r <- random_profile_of_rankings(4, 15, distinct = 3)
library(dplyr)
r <- random_profile_of_rankings(4, 15, distinct = 3)
r
tideman(r)
tideman(r, seePoints = )
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
tideman(r)
tideman(r, seePoints = T)
r <- tideman(r)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 3)
tideman(r, seePoints = T)
p <- r
r <- random_profile_of_rankings(4, 15, distinct = 4)
p <- r
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
r <- random_profile_of_rankings(4, 15, distinct = 4)
tideman(r, seePoints = T)
p <- r
r
to_latex(r)
toLatex(r)
print(por, latex = TRUE)
print(r, latex = TRUE)
cat(print(r, latex = TRUE))
xtable::xtable(r)
r$profileOfRankings
apply(r$profileOfRankings, 1, function(x) paste(x, collapse = "&"))
apply(r$profileOfRankings, 1, function(x) paste(x, collapse = " & "))
apply(r$profileOfRankings, 1, function(x) paste(paste(x, collapse = " & "), "\\")
)
library(consensus)
devtools::document()
library(consensus)
por01
xtable(por01)
library(xtable)
xtable(por01)
xtable
devtools::document()
usethis::use_package("xtable")
devtools::document()
library(consensus)
por01
xtable(por01)
devtools::document()
devtools::document()
xtable(por01)
devtools::document()
devtools::document()
library(consensus)
por01
xtable(por01)
xtable.por(por01)
por01
class(por01)
library(consensus)
xtable(por01)
detach("package:xtable", unload = TRUE)
xtable(por01)
library(xtable)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(consensus)
por01
xtable(por01)
toLatex(por01)
paste(c(1, 3, 4), c(4, 5, 2))
por01$numberOfVoters
devtools::document()
library(consensus)
por01$numberOfVoters
devtools::document()
por01
por01
toLatex(por01)
library(consensus)
toLatex(por01)
library(consensus)
toLatex(por01)
cat(toLatex(por01))
library(consensus)
cat(toLatex(por01))
library(consensus)
cat(toLatex(por01))
cat(toLatex(por01))
library(consensus)
library(consensus)
toLatex(por01)
library(consensus)
toLatex(por01)
library(consensus)
library(consensus)
toLatex(por01)
r
toLatex(r)
library(consensus)
toLatex(r)
library(usethis)
use_data_raw("por16.R")
dput(r)
source('~/Desktop/Github/consensus/data-raw/por16-R.R', echo=TRUE)
toLatex(por16)
votrix(por16)
class(votrix(por16))
tideman(r)
tideman(r, seePoints = T)
tideman(r, seePoints = T)
tideman(r, seePoints = T)
tideman(r, seeTrace =  = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
tideman(r, seeTrace = T)
votrix(r)
por16
r
library(consensus)
library(consensus)
condorcet_winner(por01)
condorcet_winner(por02)
condorcet_loser(por02)
?condorcet
document()
library(devtools)
document()
library(consensus)
condorcet_loser(por02)
?condorcet
?tideman
document()
library(consensus)
?tideman
142/60
959/60
library(usethis)
use_r("schwartx")
por06
library(consensus)
copeland(por06)
votrix(por06)
por06
votrix(por06) > 7
use_r("set_smith")
t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
library(tidyverse)
library(tidyverse)
t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
distinct = 2
t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
ncandidates = 4
t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
a <- t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
b <- t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
bind_rows(a, b)
a <- bind_rows(a, b)
b <- t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
a <- bind_rows(a, b)
a
b <- t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
a <- bind_rows(a, b)
a
a %>% distinct()
b <- t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
a <- bind_rows(a, b)
a %>% distinct()
a
b <- t(replicate(distinct, sample(1:ncandidates))) %>% tibble::as_tibble(.name_repair =  ~ vctrs::vec_as_names(..., repair = "unique", quiet = TRUE))
a <- bind_rows(a, b)
a
a %>% distinct()
a==0
if(a==0) print("ok")
if(is.null(a)) print("ok")
a <- NULL
if(is.null(a)) print("ok")
library(consensus)
library(kemeny)
random_profile_of_rankings(4,10,d=20)
random_profile_of_rankings(4,20,d=20)
random_profile_of_rankings(4,20,d=5)
random_profile_of_rankings(4,20,d=10)
library(consensus)
random_profile_of_rankings(4,20,d=10)
random_profile_of_rankings(4,20,d=20)
library(consensus)
random_profile_of_rankings(4,20,distinct = 20)
random_profile_of_rankings(4,20,distinct = 19)
library(consensus)
random_profile_of_rankings(4,20,distinct = 19)
devtools::install_github("noeliarico/consensus")
random_profile_of_rankings(4,25,distinct =25)
library(consensus)
random_profile_of_rankings(4,25,distinct =25)
random_profile_of_rankings(4,25,distinct =25)
random_profile_of_rankings(4,25,distinct =24)
library(consensus)
r <- ranking(1:4)
r
format.ranking(r)
format(r)
class(format(r))
length(format(r))
condorcet(por01)
library(consensus)
condorcet(por01)
library(consensus)
condorcet(por01)
r <- random_profile_of_rankings(4,10)
votrix(r)
condorcet(r)
condorcet(r, weak =FALSE)
condorcet(r, weak = T)
library(consensus)
library(consensus)
condorcet(r, weak = T)
condorcet_winner(r, weak = T)
length(FALSE)
library(consensus)
condorcet_winner(r, weak = T)
library(consensus)
condorcet_winner(r, weak = T)
library(consensus)
condorcet_winner(r, weak = T)
condorcet_winner(por01)
condorcet_winner(por04)
expand.grid(0:3, 0:3)
expand.grid(0:3, 0:3, 0:3, 0:3)
library(consensus)
random_profile_of_rankings(4,10,distinct = 2)
random_profile_of_rankings(4,10,distinct = 2,distribution = "unif")
expand.grid(0:3, 0:3, 0:3, 0:3)
expand.grid(0:3, 0:3, 0:3, 0:3) %>% distinct
combn(4,4)
combn(0:4,4)
combn(0:3,4)
gtools::combinations(4,4,0:3,set = FALSE,repeats.allowed = TRUE)
gtools::combinations(3,3,0:2,set = FALSE,repeats.allowed = TRUE)
apply(gtools::combinations(3,3,0:2,set = FALSE,repeats.allowed = TRUE), 1, sd)
sink("perm3.txt")
gtools::combinations(3,3,0:2,set = FALSE,repeats.allowed = TRUE)
apply(gtools::combinations(3,3,0:2,set = FALSE,repeats.allowed = TRUE), 1, sd)
sink()
sink("perm4.txt")
gtools::combinations(4,4,0:3,set = FALSE,repeats.allowed = TRUE)
apply(gtools::combinations(4,4,0:3,set = FALSE,repeats.allowed = TRUE), 1, sd)
sink()
seq(10,90,25)
round(20/2)
round(20/3)
facotorial(4)
factorial(4)
random_profile_of_rankings(4,100,distinct =24)
library(consensus)
random_profile_of_rankings(4,100,distinct =24)
random_profile_of_rankings(4,100,distinct =12)
library(consensus)
random_profile_of_rankings(4,100,distinct =12,distribution = "unif")
random_profile_of_rankings(4,100,distinct =24)
library(consensus)
random_profile_of_rankings(4,100,distinct =24)
library(consensus)
random_profile_of_rankings(4,100,distinct =24)
library(consensus)
random_profile_of_rankings(4,100,distinct =24)
library(consensus)
random_profile_of_rankings(4,100,distinct =24)
random_profile_of_rankings(4,100,distinct =25)
random_profile_of_rankings(4,23,distinct =24)
random_profile_of_rankings(4,25,distinct =24)
library(consensus)
random_profile_of_rankings(4,25,distinct =24)
